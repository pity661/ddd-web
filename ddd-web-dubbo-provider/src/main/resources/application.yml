server:
  port: 8081
  # 优雅停机配置graceful
  # kill -9 强制关机
  # kill -15 等待应用主动关闭
  shutdown: graceful

spring:
  lifecycle:
    # 优雅停机缓冲期，最大等待时间
    timeout-per-shutdown-phase: 30s
  application:
    name: dubbo-provider
  profiles:
    active: dev
  datasource:
    # DataSourceConfiguration#Hikari=>dataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${SERVER_IP}:3307/dubbo_provider?useSSL=false&useUnicode=true&characterEncoding=UTF-8&useServerPrepStmts=true
    username: root
    password: root
    hikari:
      pool-name: dubbo-provider-db-pool
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      read-only: false
      connection-test-query: select 1
      data-source-properties:
  jpa:
    database: mysql
    # 设置数据库方言
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      temp.use_jdbc_metadata_defaults: false
  # rabbitmq
  rabbitmq:
    host: ${SERVER_IP}
    port: 5672
    username: root
    password: root
    virtual-host: ddd-web
    # exchange
    publisher-confirm-type: correlated
    # queue
    publisher-returns: true
    listener:
      direct:
        # manual手动确认 none自动确认
        acknowledge-mode: manual
        # 消费者每次从队列拉取消息的个数
        prefetch: 5
#        retry:
#          enabled: true
#          max-attempts: 3 # 最大重试次数
#          initial-interval: 1000 # 初始重试间隔
#          multiplier: 1 # 每次重试后增加几倍时间
#          max-interval: 10000 # 最大重试间隔
      # fanout、topic、headers
      simple:
        acknowledge-mode: manual
        prefetch: 5


custom:
  name: wenky
  age: 26

# springboot actuator 监控
management:
  endpoints:
    web:
      exposure:
        include: '*'

dubbo:
  application:
    name: dubbo-provider
  config-center:
    namespace: 7c9923ad-98f2-4a24-a5c3-4840633a64c5
    logger: slf4j
  protocol:
    port: 20880
    name: dubbo
    transporter: iNetty
    # 这两个配置server、client需要成对出现
    server: iNetty
    client: iNetty
  #    serialization: jackson
# all(请求，响应，连接事件，断开事件，心跳) direct(所有IO线程执行) message(请求响应) execution(请求) connection
#    dispatcher:
# fixed(固定大小) cached(空闲一分钟删除) limited(可伸缩) eager
#    threadpool:
# 线程大小
#    threads:
  registry:
#    address: nacos://localhost:8848
    address: nacos://${SERVER_IP}:8848
  scan:
    base-packages: com.wenky.ddd.provider.dubbo.service.impl
  # 配置针对provider所有service生效
  provider:
    # 在provider端配置consumer端属性，会被consumer配置覆盖
    timeout:  #方法调用超时
    retries:  #失败重试次数，default 2(不包含第一次)
    loadbalance:  #负载均衡算法 random
    actives:  #消费者端，最大并发调用限制
    # 集群容错 failover, failfast, failsafe, failback, forking，broadcast
    cluster:
    # 限流配置
    executes:
    # 值为true，随机生成token。也可以指定token值。防止consumer绕过注册中心直接调用provider
    token: true
    # 使用自定义ExceptionConvertFilter，禁用默认ExceptionFilter
    # provider排除sentinel的consumer过滤器
    filter: -exception,-sentinel.dubbo.consumer.filter #--sentinel.dubbo.provider.filter # 禁用sentinel功能
    # 配置最大数据包最大载荷
    payload:

