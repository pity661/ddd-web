server:
  port: 8080

spring:
  application:
    name: dubbo-consumer
  datasource:
    # DataSourceConfiguration#Hikari=>dataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${SERVER_IP:localhost}:3307/ddd_web?useSSL=false&useUnicode=true&characterEncoding=UTF-8&useServerPrepStmts=true
    username: root
    password: root
    hikari:
      pool-name: dubbo-consumer-db-pool
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      read-only: false
      connection-test-query: select 1
      data-source-properties:

dubbo:
  application:
    name: ${spring.application.name}
  config-center:
    namespace: 7c9923ad-98f2-4a24-a5c3-4840633a64c5
    logger: slf4j
#    group:
  protocol:
    port: 21880
    name: dubbo
    transporter: iNetty
    # 这两个配置server、client需要成对出现
    server: iNetty
    client: iNetty
    # 不能反序列化异常对象类型
  #    serialization: jackson
  registry:
    address: nacos://${SERVER_IP:localhost}:8848
    # 不使用注册中心直接在service上指定url，导致无token调用provider失效
#    address: N/A
  cloud:
    subscribed-services: dubbo-provider
  consumer:
    check: false
    # 消费者请求超时时间
    timeout: 5000
    # consumer将sentinel provider filter排除。(@Activate注解默认不会生效，不排除也行)
    filter: -sentinel.dubbo.provider.filter #--sentinel.dubbo.consumer.filter # 禁用sentinel功能
    # CacheFilter
#  provider:
#    cache: redis